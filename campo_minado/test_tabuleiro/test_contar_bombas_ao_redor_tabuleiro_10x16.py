import unittest
from jogo.tabuleiro_minado import Tabuleiro_minado

class TestTabuleiroMinado(unittest.TestCase):

#Sem bombas
#linha 0
    def test_contar_bombas_ao_redor_0x0__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 0x0 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 0), 0)

    def test_contar_bombas_ao_redor_0x1__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 0x1 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 1), 0)

    def test_contar_bombas_ao_redor_0x8__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 0x8 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 8), 0)

    def test_contar_bombas_ao_redor_0x14__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 0x14 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 14), 0)

    def test_contar_bombas_ao_redor_0x15__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 0x15 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 15), 0)

#linha 1
    def test_contar_bombas_ao_redor_1x0__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 1x0 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 0), 0)

    def test_contar_bombas_ao_redor_1x1__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 1x1 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 1), 0)

    def test_contar_bombas_ao_redor_1x8__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 1x8 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 8), 0)

    def test_contar_bombas_ao_redor_1x14__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 1x14 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 14), 0)

    def test_contar_bombas_ao_redor_1x15__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 1x15 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 15), 0)

#linha 5
    def test_contar_bombas_ao_redor_5x0__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 5x0 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 0), 0)

    def test_contar_bombas_ao_redor_5x1__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 5x1 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 1), 0)

    def test_contar_bombas_ao_redor_5x8__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 5x8 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 8), 0)

    def test_contar_bombas_ao_redor_5x14__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 5x14 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 14), 0)

    def test_contar_bombas_ao_redor_5x15__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 5x15 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 15), 0)

#linha 8
    def test_contar_bombas_ao_redor_8x0__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 8x0 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 0), 0)

    def test_contar_bombas_ao_redor_8x1__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 1x1 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 1), 0)

    def test_contar_bombas_ao_redor_8x8__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 8x8 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 8), 0)

    def test_contar_bombas_ao_redor_8x14__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 8x14 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 14), 0)

    def test_contar_bombas_ao_redor_8x15__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 8x15 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 15), 0)

#linha 9
    def test_contar_bombas_ao_redor_9x0__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 9x0 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 0), 0)

    def test_contar_bombas_ao_redor_9x1__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 9x1 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 1), 0)

    def test_contar_bombas_ao_redor_9x8__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 9x8 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 8), 0)

    def test_contar_bombas_ao_redor_9x14__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 9x14 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 14), 0)

    def test_contar_bombas_ao_redor_9x15__tabuleiro_10x16(self):
        # Tabuleiro sem bombas, a célula 9x15 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 15), 0)

#COM UMA BOMBA
#linha 0
    def test_contar_bombas_ao_redor_0x0__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 0x0 não deve ter bombas ao redor
        tabuleiro = [['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 0), 1)

    def test_contar_bombas_ao_redor_0x1__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 0x1 não deve ter bombas ao redor
        tabuleiro = [['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 1), 1)

    def test_contar_bombas_ao_redor_0x8__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 0x8 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 8), 1)

    def test_contar_bombas_ao_redor_0x14__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 0x14 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 14), 1)

    def test_contar_bombas_ao_redor_0x15__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 0x15 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 15), 1)

#linha 1
    def test_contar_bombas_ao_redor_1x0__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 1x0 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 0), 1)

    def test_contar_bombas_ao_redor_1x1__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 1), 1)

    def test_contar_bombas_ao_redor_1x8__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 1x8 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 8), 1)

    def test_contar_bombas_ao_redor_1x14__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 1x14 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 14), 1)

    def test_contar_bombas_ao_redor_1x15__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 1x15 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 15), 1)

#linha 5
    def test_contar_bombas_ao_redor_5x0__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 5x0 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 0), 1)

    def test_contar_bombas_ao_redor_5x1__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 5x1 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 1), 1)

    def test_contar_bombas_ao_redor_5x8__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 5x8 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 8), 1)

    def test_contar_bombas_ao_redor_5x14__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 5x14 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 14), 1)

    def test_contar_bombas_ao_redor_5x15__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 5x15 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 15), 1)

#linha 8
    def test_contar_bombas_ao_redor_8x0__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 8x0 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 0), 1)

    def test_contar_bombas_ao_redor_8x1__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 1), 1)

    def test_contar_bombas_ao_redor_8x8__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 8x8 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 8), 1)

    def test_contar_bombas_ao_redor_8x14__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 8x14 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 14), 1)

    def test_contar_bombas_ao_redor_8x15__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 8x15 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 15), 1)

#linha 9
    def test_contar_bombas_ao_redor_9x0__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 9x0 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 0), 1)

    def test_contar_bombas_ao_redor_9x1__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 9x1 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 1), 1)

    def test_contar_bombas_ao_redor_9x8__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 9x8 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 8), 1)

    def test_contar_bombas_ao_redor_9x14__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 9x14 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 14), 1)

    def test_contar_bombas_ao_redor_9x15__tabuleiro_10x16_com_1_bomba(self):
        # Tabuleiro sem bombas, a célula 9x15 não deve ter bombas ao redor
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 15), 1)
#COM DUAS BOMBAS
#linha 0
    def test_contar_bombas_ao_redor_0x0__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 0x0 
        tabuleiro = [['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 0), 2)

    def test_contar_bombas_ao_redor_0x1__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 0x1 
        tabuleiro = [['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 1), 2)

    def test_contar_bombas_ao_redor_0x8__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 0x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 8), 2)

    def test_contar_bombas_ao_redor_0x14__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 0x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 14), 2)

    def test_contar_bombas_ao_redor_0x15__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 0x15 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 15), 2)

#linha 1
    def test_contar_bombas_ao_redor_1x0__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 1x0 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 0), 2)

    def test_contar_bombas_ao_redor_1x1__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 1), 2)

    def test_contar_bombas_ao_redor_1x8__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 1x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 8), 2)

    def test_contar_bombas_ao_redor_1x14__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 1x14
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 14), 2)

    def test_contar_bombas_ao_redor_1x15__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 1x15 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 15), 2)

#linha 5
    def test_contar_bombas_ao_redor_5x0__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 5x0 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 0), 2)

    def test_contar_bombas_ao_redor_5x1__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 5x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 1), 2)

    def test_contar_bombas_ao_redor_5x8__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 5x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 8), 2)

    def test_contar_bombas_ao_redor_5x14__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 5x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 14), 2)

    def test_contar_bombas_ao_redor_5x15__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 5x15 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 15), 2)

#linha 8
    def test_contar_bombas_ao_redor_8x0__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 8x0 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 0), 2)

    def test_contar_bombas_ao_redor_8x1__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 1), 2)

    def test_contar_bombas_ao_redor_8x8__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 8x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 8), 2)

    def test_contar_bombas_ao_redor_8x14__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 8x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 14), 2)

    def test_contar_bombas_ao_redor_8x15__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 8x15 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 15), 2)

#linha 9
    def test_contar_bombas_ao_redor_9x0__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 9x0 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 0), 2)

    def test_contar_bombas_ao_redor_9x1__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 9x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 1), 2)

    def test_contar_bombas_ao_redor_9x8__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 9x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 8), 2)

    def test_contar_bombas_ao_redor_9x14__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 9x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 14), 2)

    def test_contar_bombas_ao_redor_9x15__tabuleiro_10x16_com_2_bomba(self):
        # Tabuleiro sem bombas, a célula 9x15 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 15), 2)

#COM TRES BOMBAS
#linha 0
    def test_contar_bombas_ao_redor_0x0__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 0x0 
        tabuleiro = [['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 0), 3)

    def test_contar_bombas_ao_redor_0x1__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 0x1 
        tabuleiro = [['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 1), 3)

    def test_contar_bombas_ao_redor_0x8__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 0x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 8), 3)

    def test_contar_bombas_ao_redor_0x14__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 0x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 14), 3)

    def test_contar_bombas_ao_redor_0x15__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 0x15 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 15), 3)

#linha 1
    def test_contar_bombas_ao_redor_1x0__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 1x0 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 0), 3)

    def test_contar_bombas_ao_redor_1x1__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 1), 3)

    def test_contar_bombas_ao_redor_1x8__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 1x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 8), 3)

    def test_contar_bombas_ao_redor_1x14__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 1x14
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 14), 3)

    def test_contar_bombas_ao_redor_1x15__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 1x15 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 15), 3)

#linha 5
    def test_contar_bombas_ao_redor_5x0__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 5x0 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 0), 3)

    def test_contar_bombas_ao_redor_5x1__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 5x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 1), 3)

    def test_contar_bombas_ao_redor_5x8__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 5x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 8), 3)

    def test_contar_bombas_ao_redor_5x14__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 5x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 14), 3)

    def test_contar_bombas_ao_redor_5x15__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 5x15 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 15), 3)

#linha 8
    def test_contar_bombas_ao_redor_8x0__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 8x0 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 0), 3)

    def test_contar_bombas_ao_redor_8x1__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 1), 3)

    def test_contar_bombas_ao_redor_8x8__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 8x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','ó', 'ó', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 8), 3)

    def test_contar_bombas_ao_redor_8x14__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 8x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 14), 3)

    def test_contar_bombas_ao_redor_8x15__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 8x15 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 15), 3)

#linha 9
    def test_contar_bombas_ao_redor_9x0__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 9x0 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 0), 3)

    def test_contar_bombas_ao_redor_9x1__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 9x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 1), 3)

    def test_contar_bombas_ao_redor_9x8__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 9x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 8), 3)

    def test_contar_bombas_ao_redor_9x14__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 9x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 14), 3)

    def test_contar_bombas_ao_redor_9x15__tabuleiro_10x16_com_3_bomba(self):
        # Tabuleiro sem bombas, a célula 9x15 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 15), 3)

#COM QUATRO BOMBAS
#linha 0
    def test_contar_bombas_ao_redor_0x1__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 0x1 
        tabuleiro = [['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 1), 4)

    def test_contar_bombas_ao_redor_0x8__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 0x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 8), 4)

    def test_contar_bombas_ao_redor_0x14__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 0x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 14), 4)

#linha 1
    def test_contar_bombas_ao_redor_1x0__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 1x0 
        tabuleiro = [['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 0), 4)

    def test_contar_bombas_ao_redor_1x1__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 1), 4)

    def test_contar_bombas_ao_redor_1x8__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 1x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 8), 4)

    def test_contar_bombas_ao_redor_1x14__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 1x14
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 14), 4)

    def test_contar_bombas_ao_redor_1x15__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 1x15 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 15), 4)

#linha 5
    def test_contar_bombas_ao_redor_5x0__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 5x0 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 0), 4)

    def test_contar_bombas_ao_redor_5x1__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 5x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 1), 4)

    def test_contar_bombas_ao_redor_5x8__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 5x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 8), 4)

    def test_contar_bombas_ao_redor_5x14__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 5x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 14), 4)

    def test_contar_bombas_ao_redor_5x15__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 5x15 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 15), 4)

#linha 8
    def test_contar_bombas_ao_redor_8x0__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 8x0 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 0), 4)

    def test_contar_bombas_ao_redor_8x1__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 1), 4)

    def test_contar_bombas_ao_redor_8x8__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 8x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 8), 4)

    def test_contar_bombas_ao_redor_8x14__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 8x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 14), 4)

    def test_contar_bombas_ao_redor_8x15__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 8x15 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 15), 4)

#linha 9

    def test_contar_bombas_ao_redor_9x1__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 9x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 1), 4)

    def test_contar_bombas_ao_redor_9x8__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 9x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', 'ó', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 8), 4)

    def test_contar_bombas_ao_redor_9x14__tabuleiro_10x16_com_4_bomba(self):
        # Tabuleiro sem bombas, a célula 9x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', 'ó'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 14), 4)

#COM 5 BOMBAS
#linha 0
    def test_contar_bombas_ao_redor_0x1__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 0x1 
        tabuleiro = [['ó', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 1), 5)

    def test_contar_bombas_ao_redor_0x8__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 0x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', 'ó','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 8), 5)

    def test_contar_bombas_ao_redor_0x14__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 0x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 0, 14), 5)

#linha 1
    def test_contar_bombas_ao_redor_1x0__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 1x0 
        tabuleiro = [['ó', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 0), 5)

    def test_contar_bombas_ao_redor_1x1__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 1), 5)

    def test_contar_bombas_ao_redor_1x8__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 1x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 8), 5)

    def test_contar_bombas_ao_redor_1x14__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 1x14
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 14), 5)

    def test_contar_bombas_ao_redor_1x15__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 1x15 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 15), 5)

#linha 5
    def test_contar_bombas_ao_redor_5x0__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 5x0 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 0), 5)

    def test_contar_bombas_ao_redor_5x1__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 5x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 1), 5)

    def test_contar_bombas_ao_redor_5x8__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 5x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 8), 5)

    def test_contar_bombas_ao_redor_5x14__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 5x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 14), 5)

    def test_contar_bombas_ao_redor_5x15__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 5x15 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 15), 5)

#linha 8
    def test_contar_bombas_ao_redor_8x0__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 8x0 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 0), 5)

    def test_contar_bombas_ao_redor_8x1__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 1), 5)

    def test_contar_bombas_ao_redor_8x8__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 8x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 8), 5)

    def test_contar_bombas_ao_redor_8x14__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 8x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 14), 5)

    def test_contar_bombas_ao_redor_8x15__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 8x15 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','ó', 'ó'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 15), 5)

#linha 9

    def test_contar_bombas_ao_redor_9x1__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 9x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 1), 5)

    def test_contar_bombas_ao_redor_9x8__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 9x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','-', 'ó', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 8), 5)

    def test_contar_bombas_ao_redor_9x14__tabuleiro_10x16_com_5_bomba(self):
        # Tabuleiro sem bombas, a célula 9x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', 'ó'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 9, 14), 5)

#COM 6 BOMBAS
#linha 1
    def test_contar_bombas_ao_redor_1x1__tabuleiro_10x16_com_6_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [['ó', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 1), 6)

    def test_contar_bombas_ao_redor_1x8__tabuleiro_10x16_com_6_bomba(self):
        # Tabuleiro sem bombas, a célula 1x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', 'ó','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 8), 6)

    def test_contar_bombas_ao_redor_1x14__tabuleiro_10x16_com_6_bomba(self):
        # Tabuleiro sem bombas, a célula 1x14
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 14), 6)

#linha 5
    def test_contar_bombas_ao_redor_5x1__tabuleiro_10x16_com_6_bomba(self):
        # Tabuleiro sem bombas, a célula 5x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 1), 6)

    def test_contar_bombas_ao_redor_5x8__tabuleiro_10x16_com_6_bomba(self):
        # Tabuleiro sem bombas, a célula 5x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 8), 6)

    def test_contar_bombas_ao_redor_5x14__tabuleiro_10x16_com_6_bomba(self):
        # Tabuleiro sem bombas, a célula 5x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 14), 6)

#linha 8
    def test_contar_bombas_ao_redor_8x1__tabuleiro_10x16_com_6_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 1), 6)

    def test_contar_bombas_ao_redor_8x8__tabuleiro_10x16_com_6_bomba(self):
        # Tabuleiro sem bombas, a célula 8x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 8), 6)

    def test_contar_bombas_ao_redor_8x14__tabuleiro_10x16_com_6_bomba(self):
        # Tabuleiro sem bombas, a célula 8x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 14), 6)
#COM 7 BOMBAS
#linha 1
    def test_contar_bombas_ao_redor_1x1__tabuleiro_10x16_com_7_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [['ó', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 1), 7)

    def test_contar_bombas_ao_redor_1x8__tabuleiro_10x16_com_7_bomba(self):
        # Tabuleiro sem bombas, a célula 1x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', 'ó','ó', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 8), 7)

    def test_contar_bombas_ao_redor_1x14__tabuleiro_10x16_com_7_bomba(self):
        # Tabuleiro sem bombas, a célula 1x14
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 14), 7)

#linha 5
    def test_contar_bombas_ao_redor_5x1__tabuleiro_10x16_com_7_bomba(self):
        # Tabuleiro sem bombas, a célula 5x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 1), 7)

    def test_contar_bombas_ao_redor_5x8__tabuleiro_10x16_com_7_bomba(self):
        # Tabuleiro sem bombas, a célula 5x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 8), 7)

    def test_contar_bombas_ao_redor_5x14__tabuleiro_10x16_com_7_bomba(self):
        # Tabuleiro sem bombas, a célula 5x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 14), 7)

#linha 8
    def test_contar_bombas_ao_redor_8x1__tabuleiro_10x16_com_7_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 1), 7)

    def test_contar_bombas_ao_redor_8x8__tabuleiro_10x16_com_7_bomba(self):
        # Tabuleiro sem bombas, a célula 8x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 8), 7)

    def test_contar_bombas_ao_redor_8x14__tabuleiro_10x16_com_7_bomba(self):
        # Tabuleiro sem bombas, a célula 8x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 14), 7)

#COM 8 BOMBAS
#linha 1
    def test_contar_bombas_ao_redor_1x1__tabuleiro_10x16_com_8_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 1), 8)

    def test_contar_bombas_ao_redor_1x8__tabuleiro_10x16_com_8_bomba(self):
        # Tabuleiro sem bombas, a célula 1x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 8), 8)

    def test_contar_bombas_ao_redor_1x14__tabuleiro_10x16_com_8_bomba(self):
        # Tabuleiro sem bombas, a célula 1x14
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 1, 14), 8)

#linha 5
    def test_contar_bombas_ao_redor_5x1__tabuleiro_10x16_com_8_bomba(self):
        # Tabuleiro sem bombas, a célula 5x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 1), 8)

    def test_contar_bombas_ao_redor_5x8__tabuleiro_10x16_com_8_bomba(self):
        # Tabuleiro sem bombas, a célula 5x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 8), 8)

    def test_contar_bombas_ao_redor_5x14__tabuleiro_10x16_com_8_bomba(self):
        # Tabuleiro sem bombas, a célula 5x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 5, 14), 8)

#linha 8
    def test_contar_bombas_ao_redor_8x1__tabuleiro_10x16_com_8_bomba(self):
        # Tabuleiro sem bombas, a célula 1x1 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', '-', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['ó', 'ó', 'ó','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 1), 8)

    def test_contar_bombas_ao_redor_8x8__tabuleiro_10x16_com_8_bomba(self):
        # Tabuleiro sem bombas, a célula 8x8 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','-', 'ó', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', 'ó','ó', 'ó', '-','-', '-', '-','-', '-'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 8), 8)

    def test_contar_bombas_ao_redor_8x14__tabuleiro_10x16_com_8_bomba(self):
        # Tabuleiro sem bombas, a célula 8x14 
        tabuleiro = [['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', '-','-', '-'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','-', 'ó'],
                     ['-', '-', '-','-', '-', '-','-', '-','-', '-', '-','-', '-', 'ó','ó', 'ó'],]
        tabuleiro_minado = Tabuleiro_minado(10, 16, 0)
        self.assertEqual(tabuleiro_minado.contar_bombas_ao_redor(tabuleiro, 8, 14), 8)
if __name__ == '__main__':
    unittest.main()
